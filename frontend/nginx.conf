# frontend/nginx.conf

# Basic Nginx configuration to serve a React Single Page Application (SPA)

# Define the server block
server {
    # Listen on port 80 (the default HTTP port exposed by the container)
    listen 80;

    # Set the root directory where the built React files are located
    # This matches the destination of the COPY command in the frontend Dockerfile
    root /usr/share/nginx/html;

    # Specify the default file to serve (usually index.html for React apps)
    index index.html index.htm;

    # Handle requests for static assets (CSS, JS, images, etc.)
    # Try to serve the requested file directly. If it exists, serve it with caching headers.
    location ~* \.(?:css|js|map|jpe?g|png|gif|ico|svg|woff2?|ttf|eot)$ {
        try_files $uri =404;
        expires 1y; # Cache static assets aggressively
        add_header Cache-Control "public";
    }

    # Handle all other requests (typically for application routes)
    # This is crucial for SPAs like React Router
    location / {
        # Try to serve the requested URI as a file first (e.g., /index.html)
        # If the file doesn't exist, fall back to serving /index.html
        # This allows React Router to handle the routing on the client-side
        try_files $uri /index.html;
    }

    # Optional: Add gzip compression for better performance
    # gzip on;
    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # Optional: Add security headers
    # add_header X-Frame-Options "SAMEORIGIN";
    # add_header X-Content-Type-Options "nosniff";
    # add_header X-XSS-Protection "1; mode=block";
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
}

